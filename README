You seem to have issues turned off, so I'm using this method to report an issue...

```
$ make test
"/usr/bin/perl" -MExtUtils::Command::MM -e 'cp_nonempty' -- XS.bs blib/arch/auto/Bio/EnsEMBL/XS/XS.bs 644
make[1]: Entering directory '/outsee2/danbolser/Build/ensembl-xs/itree'
make[1]: Nothing to be done for 'all'.
make[1]: Leaving directory '/outsee2/danbolser/Build/ensembl-xs/itree'
make[1]: Entering directory '/outsee2/danbolser/Build/ensembl-xs/itree'
No tests defined for Tree::Interval::Fast::itree extension.
make[1]: Leaving directory '/outsee2/danbolser/Build/ensembl-xs/itree'
PERL_DL_NONLAZY=1 "/usr/bin/perl" "-MExtUtils::Command::MM" "-MTest::Harness" "-e" "undef *Test::Harness::Switches; test_harness(0, 'blib/lib', 'blib/arch')" t/*.t
t/00-load.t ............ 1/1 # Loading Bio::EnsEMBL::XS 2.3.2, Perl 5.034000, /usr/bin/perl
t/00-load.t ............ ok
t/01-leak.t ............ skipped: require Test::LeakTrace
t/02-rearrange.t ....... 1/?
t/02-rearrange.t ....... 22/? # Testing rearrange in Bio::EnsEMBL::XS::Utils::Argument 2.3.2, Perl 5.034000, /usr/bin/perl
t/02-rearrange.t ....... ok
t/03-check_ref.t ....... 1/? # Testing check_ref in Bio::EnsEMBL::XS::Utils::Scalar 2.3.2, Perl 5.034000, /usr/bin/perl
t/03-check_ref.t ....... ok
t/04-assert_ref.t ...... Name "Bio::EnsEMBL::Utils::Scalar::ASSERTIONS" used only once: possible typo at t/04-assert_ref.t line 38.
t/04-assert_ref.t ...... 1/? # Testing assert_ref in Bio::EnsEMBL::XS::Utils::Scalar 2.3.2, Perl 5.034000, /usr/bin/perl
t/04-assert_ref.t ...... ok
t/05-assert_numeric.t .. Name "Bio::EnsEMBL::Utils::Scalar::ASSERTIONS" used only once: possible typo at t/05-assert_numeric.t line 38.
t/05-assert_numeric.t .. 1/? # Testing assert_numeric in Bio::EnsEMBL::XS::Utils::Scalar 2.3.2, Perl 5.034000, /usr/bin/perl
t/05-assert_numeric.t .. ok
t/06-assert_integer.t .. Can't locate Bio/EnsEMBL/Utils/Scalar.pm in @INC (you may need to install the Bio::EnsEMBL::Utils::Scalar module) (@INC contains: /outsee2/danbolser/Build/ensembl-xs/t/../lib /outsee2/danbolser/Build/ensembl-xs/t/../blib/lib /outsee2/danbolser/Build/ensembl-xs/t/../blib/arch /outsee2/danbolser/Build/ensembl-xs/blib/lib /outsee2/danbolser/Build/ensembl-xs/blib/arch /home/danbolser/Build/ensembl-xs/local-lib/lib/perl5/5.34.0/x86_64-linux-gnu-thread-multi /home/danbolser/Build/ensembl-xs/local-lib/lib/perl5/5.34.0 /home/danbolser/Build/ensembl-xs/local-lib/lib/perl5/x86_64-linux-gnu-thread-multi /home/danbolser/Build/ensembl-xs/local-lib/lib/perl5 /etc/perl /usr/local/lib/x86_64-linux-gnu/perl/5.34.0 /usr/local/share/perl/5.34.0 /usr/lib/x86_64-linux-gnu/perl5/5.34 /usr/share/perl5 /usr/lib/x86_64-linux-gnu/perl-base /usr/lib/x86_64-linux-gnu/perl/5.34 /usr/share/perl/5.34 /usr/local/lib/site_perl .) at t/06-assert_integer.t line 26.
BEGIN failed--compilation aborted at t/06-assert_integer.t line 26.
t/06-assert_integer.t .. Dubious, test returned 2 (wstat 512, 0x200)
No subtests run
t/07-overlap.t ......... 1/? # Testing variation overlap Bio::EnsEMBL::XS 2.3.2, Perl 5.034000, /usr/bin/perl
t/07-overlap.t ......... ok
t/08-interval-tree.t ... skipped: require Bio::EnsEMBL::Utils::Interval
t/boilerplate.t ........ ok
t/manifest.t ........... skipped: Author tests not required for installation
t/pod-coverage.t ....... skipped: Test::Pod::Coverage 1.08 required for testing POD coverage
t/pod.t ................ skipped: Test::Pod 1.22 required for testing POD
  
Test Summary Report
-------------------
t/06-assert_integer.t (Wstat: 512 Tests: 0 Failed: 0)
  Non-zero exit status: 2
  Parse errors: No plan found in TAP output
t/boilerplate.t      (Wstat: 0 Tests: 3 Failed: 0)
  TODO passed:   1-3
Files=13, Tests=83,  9 wallclock secs ( 0.06 usr  0.02 sys +  8.48 cusr  0.80 csys =  9.36 CPU)
Result: FAIL
Failed 1/13 test programs. 0/83 subtests failed.
make: *** [Makefile:1043: test_dynamic] Error 255
```


I can't find `Bio::EnsEMBL::XS::Utils::Scalar` in internet...


thx


**WARNING**: the ensembl-xs repository on GitHub has had its history rewritten
on 2019-03-14 around 12:00 UTC. If you work with this repository you are
advised to clone it from scratch rather than to update a clone from before
the rewrite in order to make sure your local commit history is clean.


			    Bio::EnsEMBL::XS

			     Version 2.3.2

Copyright [1999-2015] Wellcome Trust Sanger Institute and the EMBL-European Bioinformatics Institute
Copyright [2016-2024] EMBL-European Bioinformatics Institute     


The Bio::EnsEMBL::XS module uses the Perl XS layer to provide fast re-implementations 
in C of some procedures of the Ensembl API, written in pure perl. 


QUICK INSTALL
-------------

To install this module from source code, run the following commands:

	perl Makefile.PL
	make
	make test
	make install

See file INSTALL for more detailed documentation on how to obtain, build, test, 
install and benchmark the extensions.
    
 
SUPPORT AND DOCUMENTATION
-------------------------

After installing, you can find documentation for this module with the
perldoc command:

    perldoc Bio::EnsEMBL::XS


AUTHOR
------

The module and the extensions have been written by Alessandro Vullo <avullo@ebi.ac.uk>
with the assistance of Andy Yates and contribution of Will McLaren.


LICENSE AND COPYRIGHT
---------------------

Copyright [1999-2015] Wellcome Trust Sanger Institute and the EMBL-European Bioinformatics Institute
Copyright [2016-2024] EMBL-European Bioinformatics Institute     

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at
 
     http://www.apache.org/licenses/LICENSE-2.0
 
Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
